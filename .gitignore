# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be added to the global gitignore or merged into this project gitignore.  For a PyCharm
#  project, uncomment the following lines:
#.idea/

# VS Code
.vscode/
.history/

# Streamlit
.streamlit/
.streamlit/config.toml
.streamlit/credentials.toml

# ====== ML/AI 관련 ======
# Hugging Face cache
.cache/
transformers_cache/
huggingface/
models/
huggingface_hub/

# PyTorch cache
.torch/
torch_cache/

# Model files and checkpoints
*.pth
*.pt
*.bin
*.safetensors
checkpoint-*/
model_cache/
saved_models/

# TensorFlow
*.pb
saved_model/
tensorboard_logs/

# ====== Google Cloud 관련 ======
# Google Cloud credentials and config files
*.json
gcp-*.json
service-account*.json
google-credentials*.json
firestore-key*.json
firebase-adminsdk-*.json
google-cloud-*.json

# Google Cloud SDK
.gcloud/

# ====== 데이터 파일 ======
# Data files
*.csv
*.jsonl
*.parquet
*.xlsx
*.xls
data/
datasets/
raw_data/
processed_data/
product_data/
embedding_data/

# ====== 로그 및 임시 파일 ======
# Logs
logs/
*.log
*.out
*.err
streamlit_logs/

# Temporary files
temp/
tmp/
.temp/
.tmp/
temporary/

# ====== 시스템 파일 ======
# macOS
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes

# Windows
ehthumbs.db
Thumbs.db
Desktop.ini
$RECYCLE.BIN/

# Linux
.directory
.fuse_hidden*

# ====== IDE 관련 ======
# JetBrains IDEs
.idea/
*.iws
*.iml
*.ipr

# Sublime Text
*.sublime-project
*.sublime-workspace

# Vim
*.swp
*.swo
*~
.netrwhist

# Emacs
*~
*.elc
auto-save-list
tramp
.#*

# ====== Docker 관련 ======
# Docker files (선택적으로 포함할 수 있음)
# Dockerfile
# docker-compose.yml
# .dockerignore

# ====== 보안 관련 ======
# Secrets and API keys
secrets/
keys/
credentials/
*.key
*.pem
config.ini
settings.py
api_keys.py

# SSL certificates
*.crt
*.cert
*.ca-bundle

# ====== 테스트 관련 ======
# Test files
test_*.py
*_test.py
tests/
.coverage
.pytest_cache/
htmlcov/

# ====== 백업 및 기타 ======
# Backup files
*.bak
*.backup
*.orig
*.tmp

# Archive files
*.zip
*.tar.gz
*.rar
*.7z
*.tar
*.gz

# Database files
*.db
*.sqlite
*.sqlite3

# ====== 프로젝트 특화 ======
# Custom project files
products.json
embeddings/
output/
results/
experiments/
vectorstore/
faiss_index/

# Uploaded files
uploads/
user_images/

# Generated files
generated_*
output_*

# Configuration files with sensitive data
config_local.py
local_settings.py
.env.local
.env.production

# Cache directories
cache/
.cache/
__pycache__/

# Node.js (if using any JS tools)
node_modules/
npm-debug.log
yarn-debug.log
yarn-error.log

# R (if using R for data analysis)
.RData
.Rhistory
.Rproj.user

# MATLAB
*.asv
*.mex*

# Jupyter
.ipynb_checkpoints/
*.ipynb

# Virtual environments
pipenv/
conda-meta/
